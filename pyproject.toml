[project]
name = "django-e-commers-course"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "cloudinary>=1.44.0",
    "crispy-bootstrap5>=2025.6",
    "django>=5.1.4",
    "django-crispy-forms>=2.4",
    "gunicorn>=23.0.0",
    "pillow>=11.1.0",
    "pre-commit>=4.3.0",
    "psycopg2-binary>=2.9.10",
    "pytest-django>=4.11.1",
    "python-decouple>=3.8",
    "ruff>=0.12.12",
    "stripe>=11.4.1",
    "whitenoise>=6.9.0",
]

[project.optional-dependencies]
types-stubs = [
    "django-stubs>=5.2.0",
    "django-stubs-ext>=5.2.0",
    "django-types>=0.20.0",
    "python-decouple-stubs>=3.8.0.4",
]

[dependency-groups]
dev = ["django-livereload-server>=0.5.1", "ipython>=9.2.0"]

[tool.ruff]
lint.select = [
    "A",     # flake8-builtins
    "AIR",   # Airflow
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "ANN",   # flake8-annotations
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "C90",   # mccabe
    "COM",   # flake8-commas
    "DJ",    # flake8-django
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle error
    "EM",    # flake8-errmsg
    "ERA",   # eradicate
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "FBT",   # flake8-boolean-trap
    "FIX",   # flake8-fixme
    "FLY",   # flynt
    "FURB",  # refurb
    "G",     # flake8-logging-format
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "INT",   # flake8-gettext
    "ISC",   # flake8-implicit-str-concat
    "LOG",   # flake8-logging
    "N",     # pep8-naming
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "PIE",   # flake8-pie
    "PL",    # Pylint
    "PT",    # flake8-pytest-style
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "TC",    # flake8-type-checking
    "TD",    # flake8-todos
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "W",     # pycodestyle warning
]
lint.ignore = [
    "ARG002",  # Unused method argument
    "ARG003",  # Unused class method argument
    "PLR6301", # Method could be a function
    "RUF012",  # Mutable class attributes should be annotated
    "RUF100",  # Unused `noqa` directive
    "ERA001",  # Found commented-out code
    "TRY300",  # Consider moving this statement to an `else` block
    "PGH003",  # Use specific rule codes when ignoring type issues
    "FBT001",  # Boolean positional arg in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "G004",    # Logging statement uses f-string
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "edshop.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["tests"]
addopts = "-v --tb=short"
